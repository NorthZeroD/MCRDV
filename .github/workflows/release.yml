name: Release RP & DP Version

on:
  schedule:
    # run at 16:00 (UTC) every day
    - cron: "0 16 * * *"
  workflow_dispatch: # manual trigger

jobs:
  run-crawler-and-release-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup python 3.14
        uses: actions/setup-python@v5
        with:
          python-version: "3.14"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run main.py
        run: |
          python src/main.py

      - name: Check output file
        run: |
          if [ ! -f output/rp_version.json ]; then
            echo "Error: output/rp_version.json not found!"
            exit 1
          fi
          if [ ! -f output/mcv.txt ]; then
            echo "Error: output/mcv.txt not found!"
            exit 1
          fi

      - name: Get Minecraft version for release title
        id: get-mcv
        run: |
          echo "title=$(cat output/mcv.txt | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Generate UTC-based tag
        id: tag
        run: |
          UTC_DATE=$(date -u +"%Y%m%d")             # 20251028
          UTC_DATETIME=$(date -u +"%Y%m%dT%H%M%SZ") # 20251028T160000Z
          TAG="$UTC_DATETIME"
          echo "Generated tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.tag.outputs.tag }}
          git push origin ${{ steps.tag.outputs.tag }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.get-mcv.outputs.title }} - ${{ steps.tag.outputs.tag }}
          body: |
            Automated release triggered by GitHub Actions.
            - Generated from `src/main.py`
            - File: `rp_version.json`
          draft: false
          prerelease: false
          files: output/rp_version.json
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
